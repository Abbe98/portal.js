# This is inefficient as it collects the full data for all chapters when that
# is only needed for the chapter being viewed, but is necessary to validate
# that the requested exhibition and chapter are in fact linked.
# Preferably we would request the chapter, with a where clause on
# linkedFrom.exhibitionPageCollection, but that is not supported by the
# Contentful GraphQL API.
query ExhibitionChapterPage(
  $locale: String!,
  $identifier: String!,
  $preview: Boolean = false
) {
  exhibitionPageCollection(preview: $preview, locale: $locale, where: { identifier: $identifier }, limit: 1) {
    total
    items {
      sys {
        id
      }
      name
      identifier
      credits
      hasPartCollection(limit: 20) {
        items {
          sys {
            id
          }
          name
          identifier
          headline
          description
          primaryImageOfPage {
            ... imageWithAttributionFields
          }
          hasPartCollection(limit: 20) {
            total
            items {
              __typename
              ... on ContentTypeRichText {
                sys {
                  id
                }
                text
              }
              ... on Embed {
                sys {
                  id
                }
                embed
              }
              ... on ImageWithAttribution {
                ... imageWithAttributionFields
              }
              ... on ImageComparison {
                sys {
                  id
                }
                name
                hasPartCollection(limit: 2) {
                  items {
                    ... imageWithAttributionFields
                  }
                }
              }
              # CardGroup omitted intentionally
            }
          }
        }
      }
    }
  }
}

fragment imageWithAttributionFields on ImageWithAttribution {
  sys {
    id
  }
  name
  creator
  provider
  license
  url
  image {
    sys {
      id
    }
    url
    contentType
    width
    height
  }
}
